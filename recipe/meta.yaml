{% set name = "pycares" %}
{% set version = "4.10.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 9df70dce6e05afa5d477f48959170e569485e20dad1a089c4cf3b2d7ffbd8bf9

build:
  number: 0
  skip: True  # [py<39]
  script_env:
    - PYCARES_USE_SYSTEM_LIB=1
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation --ignore-installed --no-cache-dir -vv

requirements:
  build:
    - {{ stdlib('c') }}
    - {{ compiler('c') }}
  host:
    - python
    - pip
    - cffi >=1.5.0
    - setuptools
    - wheel
    - c-ares {{ c_ares }}
  run:
    - python
    - c-ares # bounds through run_exports
  run_constrained:
    - idna >=2.1

test:
  source_files:
    - tests
  imports:
    - pycares
  commands:
    - python -m pycares google.com
    - pip check
    - python -c "from importlib.metadata import version; assert(version('{{ name }}')=='{{ version }}')"
    # getting pycares.errno.ARES_ETIMEOUT instead of pycares.errno.ARES_ECONNREFUSED on some tests.
    - pytest -v -k "not (test_channel_local_ip or test_channel_local_ip2 or test_custom_resolvconf or test_query_a_rotate)"
  requires:
    - pip
    - pytest

about:
  home: https://pypi.org/project/pycares
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Python interface for c-ares
  description: |
    pycares is a Python module which provides an interface to c-ares. c-ares
    is a C library that performs DNS requests and name resolutions
    asynchronously.
  doc_url: https://pycares.readthedocs.io
  dev_url: https://github.com/saghul/pycares

extra:
  recipe-maintainers:
    - CurtLH